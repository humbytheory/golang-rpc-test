# Generate CA Cert
# go run $GOROOT/src/crypto/tls/generate_cert.go -ca=true -host=MyCAServer

# Generate RPC Server cert and key
# go run $GOROOT/src/crypto/tls/generate_cert.go -host=localhost
# mv cert.pem MyRPCServer_cert.pem ; mv key.pem MyRPCServer_key.pem

# Generate RPC Client cert and key
# mv cert.pem MyRPCClient_cert.pem ; mv key.pem MyRPCClient_key.pem

### Above does not work since the server and client cert are not signed with the CA cert ###

# Using OpenSSL's easy-rsa script #
# https://github.com/OpenVPN/easy-rsa

# Get repo
git clone https://github.com/OpenVPN/easy-rsa.git example-ca

# Generate TSL Certs

unzip ~/easy-rsa-master.zip
cd easy-rsa-master/easyrsa3/
cp vars.example vars

cat<<_end>>vars
set_var EASYRSA_REQ_COUNTRY="US"
set_var EASYRSA_REQ_PROVINCE="NY"
set_var EASYRSA_REQ_CITY="New York"
set_var EASYRSA_REQ_ORG="Wakka"
set_var EASYRSA_REQ_EMAIL="myEamail@myServer.com"
set_var EASYRSA_REQ_OU="wakka wakka"
_end

./easyrsa init-pki
./easyrsa build-ca

./easyrsa --subject-alt-name=IP:192.168.0.2,DNS:myServer.com   build-server-full myServer-server nopass
./easyrsa --subject-alt-name=IP:192.168.0.2,DNS:myClient.com   build-client-full myClient-client nopass

cd ../..
cp easy-rsa-master/easyrsa3/pki/ca.crt .
cp easy-rsa-master/easyrsa3/pki/issued/*{myServer,myClient}.crt .
cp easy-rsa-master/easyrsa3/pki/private/*{myServer,myClient}.key .
